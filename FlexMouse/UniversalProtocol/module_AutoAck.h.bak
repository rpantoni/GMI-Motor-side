/**
  ********************************************************************************************************************************
  * @file    module_AutoAck.h 
  * @author  Pamela Lee
  * @version V1.0
  * @date    21-OCT-2020
  * @brief   Main driver module for Auto Acknowledgement of Universal procotol.
  * @details 
  ********************************************************************************************************************************
  */

/* Define to prevent recursive inclusion ---------------------------------------------------------------------------------------*/
#ifndef _MODULE_AUTOACK_H_
#define _MODULE_AUTOACK_H_

/* Includes --------------------------------------------------------------------------------------------------------------------*/
#include "main.h"
#include "typedef.h"

#include "scheduler.h"
#include "sequential_memory.h"
#include "structured_memory.h"

/* Content ---------------------------------------------------------------------------------------------------------------------*/
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
  
//*****************************************************************************************
typedef  struct 
{
    uint8_t       AckCmd;
    uint16_t      E_AckCmd;
    uint8_t       ProcessAckID;                                          //Ack process ID
    uint8_t       FrameAckID;                                            //
}UniversalAckInfo;
#define AckBufSize 16
UniversalAckInfo buf[AckBufSize];//= { {0,0,0,0}, {0,0,0,0}, {0,0,0,0}, {0,0,0,0}, {0,0,0,0}, {0,0,0,0}, {0,0,0,0}, {0,0,0,0}, {0,0,0,0}, {0,0,0,0} };
uint8_t Uni_AckHead = 0;
uint8_t Uni_AckTail = 0;
uint8_t Uni_NextFrameID = 0;                    //Unversal Ack frame ID (which the number continue count up and roll over) 
//********************************************************************************************************************************************************

void UniversalAckInit(void);
uint8_t AckDatSet(uint8_t AckCmd, uint16_t E_AckCmd, uint8_t ProcessAckID, uint8_t FrameAckID)
uint8_t IsAckBufFull(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* _MODULE_AUTOACK_H_ */